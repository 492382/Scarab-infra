ARG ssh_prv_key
ENV ssh_prv_key=$ssh_prv_key

# Install required packages
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    python3 \
    python3-pip \
    python2 \
    git \
    sudo \
    wget \
    cmake \
    binutils \
    libunwind-dev \
    libboost-dev \
    zlib1g-dev \
    libsnappy-dev \
    liblz4-dev \
    g++-9 \
    g++-9-multilib \
    doxygen \
    libconfig++-dev \
    libboost-dev \
    vim \
    bc \
    unzip

RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 1

RUN pip3 install gdown

# Create a new user 'dcuser' with password 'dcuser'
RUN useradd -m dcuser && \
    echo "dcuser:dcuser" | chpasswd && \
    usermod --shell /bin/bash dcuser && \
    usermod -aG sudo dcuser

# Authorize SSH Host
RUN mkdir -p /home/dcuser/.ssh && \
    chown -R dcuser:root /home/dcuser/.ssh && \
    chmod 700 /home/dcuser/.ssh

# Add the key and set permission
RUN echo "$ssh_prv_key" > /home/dcuser/.ssh/id_rsa && \
    chown -R dcuser:root /home/dcuser/.ssh/id_rsa && \
    chmod 700 /home/dcuser/.ssh/id_rsa
RUN touch /home/dcuser/.ssh/known_hosts && \
    chown -R dcuser:root /home/dcuser/.ssh/known_hosts && \
    chmod 700 /home/dcuser/.ssh/known_hosts
RUN ssh-keyscan github.com >> /home/dcuser/.ssh/known_hosts

# Set the working directory
WORKDIR /home/dcuser

# Switch to the dcuser user
USER dcuser

# DynamoRIO build from source
RUN git clone --recursive https://github.com/DynamoRIO/dynamorio.git && cd dynamorio && git reset --hard release_10.0.0 && mkdir build && cd build && cmake .. && make -j 40

# Build DynamoRIO package for fingerprint client
RUN mkdir /home/dcuser/dynamorio/package && \
    cd /home/dcuser/dynamorio/package && \
    ctest -V -S ../make/package.cmake,build=1\;no32
ENV DYNAMORIO_HOME=/home/dcuser/dynamorio/package/build_release-64/

# Build fingerprint client
COPY --chown=dcuser fingerprint_src /home/dcuser/fingerprint_src/
RUN mkdir /home/dcuser/fingerprint_src/build && \
    cd /home/dcuser/fingerprint_src/build && \
    cmake -DDynamoRIO_DIR=$DYNAMORIO_HOME/cmake .. && \
    make && \
    cp ./libfpg.so /home/dcuser/libfpg.so

# Copy workflow simpoint/no_simpoint script
COPY --chown=dcuser utilities.sh /home/dcuser/utilities.sh
COPY --chown=dcuser run_clustering.sh /home/dcuser/run_clustering.sh
COPY --chown=dcuser run_trace_post_processing.sh /home/dcuser/run_trace_post_processing.sh

COPY --chown=dcuser run_simpoint_trace.sh /home/dcuser/run_simpoint_trace.sh
COPY --chown=dcuser run_scarab.sh /home/dcuser/run_scarab.sh
COPY --chown=dcuser gather_fp_pieces.py /home/dcuser/gather_fp_pieces.py

COPY --chown=dcuser run_scarab_mode_4.sh /home/dcuser/run_scarab_mode_4.sh
COPY --chown=dcuser gather_cluster_results.py /home/dcuser/gather_cluster_results.py

# Clone the Scarab repository
# Comment out if you don't use scarab at all and don't have ssh key permitted to clone 'scarab_hlitz'
RUN cd /home/dcuser && git clone -b decoupled_fe git@github.com:hlitz/scarab_hlitz.git scarab

# Install Scarab dependencies
RUN pip3 install -r /home/dcuser/scarab/bin/requirements.txt
RUN wget https://software.intel.com/sites/landingpage/pintool/downloads/pin-3.15-98253-gb56e429b1-gcc-linux.tar.gz && tar -xzvf pin-3.15-98253-gb56e429b1-gcc-linux.tar.gz

# Build Scarab
ENV PIN_ROOT /home/dcuser/pin-3.15-98253-gb56e429b1-gcc-linux
ENV SCARAB_ENABLE_PT_MEMTRACE 1
ENV LD_LIBRARY_PATH /home/dcuser/pin-3.15-98253-gb56e429b1-gcc-linux/extras/xed-intel64/lib
ENV LD_LIBRARY_PATH /home/dcuser/pin-3.15-98253-gb56e429b1-gcc-linux/intel64/runtime/pincrt:$LD_LIBRARY_PATH
RUN cd /home/dcuser/scarab/src && \
    make
RUN mkdir /home/dcuser/exp
RUN mkdir -p /home/dcuser/traces

# Build SimPoint 3.2
# Reference:
# https://github.com/intel/pinplay-tools/blob/main/pinplay-scripts/PinPointsHome/Linux/bin/Makefile
RUN cd /home/dcuser/ && \
    wget -O - http://cseweb.ucsd.edu/~calder/simpoint/releases/SimPoint.3.2.tar.gz | tar -x -f - -z && \
    wget https://raw.githubusercontent.com/intel/pinplay-tools/main/pinplay-scripts/PinPointsHome/Linux/bin/simpoint_modern_gcc.patch -P SimPoint.3.2/ && \
    patch --directory=SimPoint.3.2 --strip=1 < SimPoint.3.2/simpoint_modern_gcc.patch && \
    make -C SimPoint.3.2 && \
    ln -s SimPoint.3.2/bin/simpoint ./simpoint

ENV DOCKER_BUILDKIT 1
ENV COMPOSE_DOCKER_CLI_BUILD 1

# Do not comment out
RUN rm /home/dcuser/.ssh/id_rsa && rm /home/dcuser/.ssh/known_hosts
