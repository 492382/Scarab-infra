ARG ssh_prv_key
ENV ssh_prv_key=$ssh_prv_key
ARG user_id
ENV user_id=$user_id
ARG group_id
ENV group_id=$group_id
ARG username
ENV username=$username

# Install required packages
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    python3 \
    python3-pip \
    python2 \
    git \
    sudo \
    wget \
    cmake \
    binutils \
    libunwind-dev \
    libboost-dev \
    zlib1g-dev \
    libsnappy-dev \
    liblz4-dev \
    g++-9 \
    g++-9-multilib \
    doxygen \
    libconfig++-dev \
    libboost-dev \
    vim \
    bc \
    unzip \
    gosu

RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 1

# Create a new user with $username
RUN useradd -u $user_id -o -m $username && \
    groupmod -g $group_id $username

# Authorize SSH Host
RUN mkdir -p /home/$username/.ssh && \
    chown -R $username:root /home/$username/.ssh && \
    chmod 700 /home/$username/.ssh

# Add the key and set permission
RUN echo "$ssh_prv_key" > /home/$username/.ssh/id_rsa && \
    chown -R $username:root /home/$username/.ssh/id_rsa && \
    chmod 700 /home/$username/.ssh/id_rsa
RUN touch /home/$username/.ssh/known_hosts && \
    chown -R $username:root /home/$username/.ssh/known_hosts && \
    chmod 700 /home/$username/.ssh/known_hosts
RUN ssh-keyscan github.com >> /home/$username/.ssh/known_hosts


# Copy workflow simpoint/no_simpoint script
COPY utilities.sh /usr/local/bin/utilities.sh
COPY run_clustering.sh /usr/local/bin/run_clustering.sh
COPY run_trace_post_processing.sh /usr/local/bin/run_trace_post_processing.sh

COPY run_simpoint_trace.sh /usr/local/bin/run_simpoint_trace.sh
COPY run_scarab.sh /usr/local/bin/run_scarab.sh
COPY run_scarab_allbench.sh /usr/local/bin/run_scarab_allbench.sh
COPY gather_fp_pieces.py /usr/local/bin/gather_fp_pieces.py

COPY run_scarab_mode_4.sh /usr/local/bin/run_scarab_mode_4.sh
COPY run_scarab_mode_4_allbench.sh /usr/local/bin/run_scarab_mode_4_allbench.sh
COPY gather_cluster_results.py /usr/local/bin/gather_cluster_results.py
COPY ./common/common_entrypoint.sh /usr/local/bin/common_entrypoint.sh

RUN mkdir -p /simpoint_traces
ENV tmpdir="/tmp_home"
RUN mkdir -p $tmpdir && chown -R $username:$username $tmpdir

# Set the working directory
WORKDIR $tmpdir

# Switch to the user
USER $username

# Clone the Scarab repository
# Comment out if you don't use scarab at all and don't have ssh key permitted to clone 'scarab_hlitz'
RUN cd $tmpdir && git clone -b decoupled_fe git@github.com:hlitz/scarab_hlitz.git scarab

# Install Scarab dependencies
RUN pip3 install -r $tmpdir/scarab/bin/requirements.txt
RUN cd $tmpdir && wget -nc https://software.intel.com/sites/landingpage/pintool/downloads/pin-3.15-98253-gb56e429b1-gcc-linux.tar.gz && tar -xzvf pin-3.15-98253-gb56e429b1-gcc-linux.tar.gz

# Env to build Scarab
ENV PIN_ROOT /home/$username/pin-3.15-98253-gb56e429b1-gcc-linux
ENV SCARAB_ENABLE_PT_MEMTRACE 1
ENV LD_LIBRARY_PATH /home/$username/pin-3.15-98253-gb56e429b1-gcc-linux/extras/xed-intel64/lib
ENV LD_LIBRARY_PATH /home/$username/pin-3.15-98253-gb56e429b1-gcc-linux/intel64/runtime/pincrt:$LD_LIBRARY_PATH

ENV HOME /home/$username
# Set the working directory
WORKDIR /home/$username

ENV DOCKER_BUILDKIT 1
ENV COMPOSE_DOCKER_CLI_BUILD 1

# Do not comment out
RUN rm /home/$username/.ssh/id_rsa && rm /home/$username/.ssh/known_hosts
